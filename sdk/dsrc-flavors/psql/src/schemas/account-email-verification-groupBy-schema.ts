import type { Prisma } from '../dsrc/client';
import { z } from 'zod';
import { AccountEmailVerificationWhereInputObjectSchema as AccountEmailVerificationWhereInputObjectSchema } from './objects/account-email-verification-AccountEmailVerificationWhereInput-input.js';
import { AccountEmailVerificationOrderByWithAggregationInputObjectSchema as AccountEmailVerificationOrderByWithAggregationInputObjectSchema } from './objects/account-email-verification-AccountEmailVerificationOrderByWithAggregationInput-input.js';
import { AccountEmailVerificationScalarWhereWithAggregatesInputObjectSchema as AccountEmailVerificationScalarWhereWithAggregatesInputObjectSchema } from './objects/account-email-verification-AccountEmailVerificationScalarWhereWithAggregatesInput-input.js';
import { AccountEmailVerificationScalarFieldEnum } from './enums/account-email-verification-scalar-field-enum-enum.js';
import { AccountEmailVerificationCountAggregateInputObjectSchema as AccountEmailVerificationCountAggregateInputObjectSchema } from './objects/account-email-verification-AccountEmailVerificationCountAggregateInput-input.js';
import { AccountEmailVerificationMinAggregateInputObjectSchema as AccountEmailVerificationMinAggregateInputObjectSchema } from './objects/account-email-verification-AccountEmailVerificationMinAggregateInput-input.js';
import { AccountEmailVerificationMaxAggregateInputObjectSchema as AccountEmailVerificationMaxAggregateInputObjectSchema } from './objects/account-email-verification-AccountEmailVerificationMaxAggregateInput-input.js';

export const AccountEmailVerificationGroupBySchema: z.ZodType<Prisma.AccountEmailVerificationGroupByArgs> = z.object({ where: AccountEmailVerificationWhereInputObjectSchema.optional(), orderBy: z.union([AccountEmailVerificationOrderByWithAggregationInputObjectSchema, AccountEmailVerificationOrderByWithAggregationInputObjectSchema.array()]).optional(), having: AccountEmailVerificationScalarWhereWithAggregatesInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), by: z.array(AccountEmailVerificationScalarFieldEnum), _count: z.union([ z.literal(true), AccountEmailVerificationCountAggregateInputObjectSchema ]).optional(), _min: AccountEmailVerificationMinAggregateInputObjectSchema.optional(), _max: AccountEmailVerificationMaxAggregateInputObjectSchema.optional() }).strict() as unknown as z.ZodType<Prisma.AccountEmailVerificationGroupByArgs>;

export const AccountEmailVerificationGroupBySchemaZodSchema = z.object({ where: AccountEmailVerificationWhereInputObjectSchema.optional(), orderBy: z.union([AccountEmailVerificationOrderByWithAggregationInputObjectSchema, AccountEmailVerificationOrderByWithAggregationInputObjectSchema.array()]).optional(), having: AccountEmailVerificationScalarWhereWithAggregatesInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), by: z.array(AccountEmailVerificationScalarFieldEnum), _count: z.union([ z.literal(true), AccountEmailVerificationCountAggregateInputObjectSchema ]).optional(), _min: AccountEmailVerificationMinAggregateInputObjectSchema.optional(), _max: AccountEmailVerificationMaxAggregateInputObjectSchema.optional() }).strict();