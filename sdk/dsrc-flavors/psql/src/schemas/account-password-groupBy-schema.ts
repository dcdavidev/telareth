import type { Prisma } from '../dsrc/client';
import { z } from 'zod';
import { AccountPasswordWhereInputObjectSchema as AccountPasswordWhereInputObjectSchema } from './objects/account-password-AccountPasswordWhereInput-input.js';
import { AccountPasswordOrderByWithAggregationInputObjectSchema as AccountPasswordOrderByWithAggregationInputObjectSchema } from './objects/account-password-AccountPasswordOrderByWithAggregationInput-input.js';
import { AccountPasswordScalarWhereWithAggregatesInputObjectSchema as AccountPasswordScalarWhereWithAggregatesInputObjectSchema } from './objects/account-password-AccountPasswordScalarWhereWithAggregatesInput-input.js';
import { AccountPasswordScalarFieldEnum } from './enums/account-password-scalar-field-enum-enum.js';
import { AccountPasswordCountAggregateInputObjectSchema as AccountPasswordCountAggregateInputObjectSchema } from './objects/account-password-AccountPasswordCountAggregateInput-input.js';
import { AccountPasswordMinAggregateInputObjectSchema as AccountPasswordMinAggregateInputObjectSchema } from './objects/account-password-AccountPasswordMinAggregateInput-input.js';
import { AccountPasswordMaxAggregateInputObjectSchema as AccountPasswordMaxAggregateInputObjectSchema } from './objects/account-password-AccountPasswordMaxAggregateInput-input.js';

export const AccountPasswordGroupBySchema: z.ZodType<Prisma.AccountPasswordGroupByArgs> = z.object({ where: AccountPasswordWhereInputObjectSchema.optional(), orderBy: z.union([AccountPasswordOrderByWithAggregationInputObjectSchema, AccountPasswordOrderByWithAggregationInputObjectSchema.array()]).optional(), having: AccountPasswordScalarWhereWithAggregatesInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), by: z.array(AccountPasswordScalarFieldEnum), _count: z.union([ z.literal(true), AccountPasswordCountAggregateInputObjectSchema ]).optional(), _min: AccountPasswordMinAggregateInputObjectSchema.optional(), _max: AccountPasswordMaxAggregateInputObjectSchema.optional() }).strict() as unknown as z.ZodType<Prisma.AccountPasswordGroupByArgs>;

export const AccountPasswordGroupBySchemaZodSchema = z.object({ where: AccountPasswordWhereInputObjectSchema.optional(), orderBy: z.union([AccountPasswordOrderByWithAggregationInputObjectSchema, AccountPasswordOrderByWithAggregationInputObjectSchema.array()]).optional(), having: AccountPasswordScalarWhereWithAggregatesInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), by: z.array(AccountPasswordScalarFieldEnum), _count: z.union([ z.literal(true), AccountPasswordCountAggregateInputObjectSchema ]).optional(), _min: AccountPasswordMinAggregateInputObjectSchema.optional(), _max: AccountPasswordMaxAggregateInputObjectSchema.optional() }).strict();