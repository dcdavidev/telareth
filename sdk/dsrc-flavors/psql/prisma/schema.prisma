datasource db {
  provider = "postgresql"
  url      = env("DATABASE_PSQL_URL")
  schemas  = ["accounts", "knots"]
}

generator client {
  provider               = "prisma-client"
  output                 = "../src/dsrc"
  moduleFormat           = "esm"
  generatedFileExtension = "ts"
  importFileExtension    = "js"
}

generator zod {
  provider                  = "prisma-zod-generator"
  output                    = "../src/schemas"
  config                    = "./zod-generator.config.json"
  safetyAllowDangerousPaths = true
  mode                      = "full"
  useMultipleFiles          = false
  singleFileName            = "index.ts"
}

/// Account information
model Account {
  id        String   @id @default(uuid()) @db.Uuid
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deletedAt DateTime

  isActive Boolean @default(true)

  emails     AccountEmail[]
  password   AccountPassword @relation(fields: [passwordId], references: [id])
  passwordId String          @unique @db.Uuid

  @@schema("accounts")
}

/// Account emails
model AccountEmail {
  id        String   @id @default(uuid()) @db.Uuid
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  email     String  @unique
  /// If true the email is used to login
  isPrimary Boolean @default(false)

  account        Account?                  @relation(fields: [accountId], references: [id])
  accountId      String?                   @db.Uuid
  verification   AccountEmailVerification? @relation(fields: [verificationId], references: [id])
  verificationId String?                   @unique @db.Uuid

  @@schema("accounts")
}

/// Email verification entity
model AccountEmailVerification {
  id        String        @id @default(uuid()) @db.Uuid
  createdAt DateTime      @default(now())
  email     AccountEmail?

  @@schema("accounts")
}

/// Account password
model AccountPassword {
  id        String   @id @default(uuid()) @db.Uuid
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  password String

  account Account?

  @@schema("accounts")
}

model Health {
  id          Int          @id @default(1)
  status      HealthStatus @default(OK)
  lastChecked DateTime     @updatedAt
  metadata    Json?

  @@schema("knots")
}

enum HealthStatus {
  OK
  WARN
  ERROR

  @@schema("knots")
}
